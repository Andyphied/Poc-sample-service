version: '3.7'

services:
    # Development related
    test-sqlite:
        environment:
            - PYTHONDONTWRITEBYTECODE=1
        env_file: environment2.env
        build:
            dockerfile: docker/app/Dockerfile
            context: .
        entrypoint: pytest
        volumes:
            - ./OperatorsBackend:/opt/code

    test-postgresql:
        env_file: environment.env
        environment:
            - PYTHONDONTWRITEBYTECODE=1
        build:
            dockerfile: docker/app/Dockerfile
            context: .
        entrypoint: pytest
        depends_on:
            - db
            - mongodb
            - rabbitmq
        volumes:
            - ./OperatorsBackend:/opt/code

    # Pipeline actions
    test:
        env_file: environment.env
        environment:
            - PYTHONDONTWRITEBYTECODE=1
        build:
            dockerfile: docker/app/Dockerfile
            context: .
        entrypoint: pytest
        depends_on:
            - db
            - mongodb
            - rabbitmq

    static-analysis:
        build:
            dockerfile: docker/app/Dockerfile
            context: .
        entrypoint: flake8

    db:
        env_file: environment.env
        environment:
            - PYTHONDONTWRITEBYTECODE=1
        build:
            context: .
            dockerfile: ./docker/db/Dockerfile
            args:
                # These values should be in sync with environment
                # for development. If you change them, you'll
                # need to rebuild the container
                - POSTGRES_DB=operators
                - POSTGRES_USER=postgres
                - POSTGRES_PASSWORD=somepassword
                - POSTGRES_PORT=5432
            

    # Producion related
    # Note that db-debug is the same as db, but it exposes locally
    # port 5432 to access PostgreSQL
    db-debug:
        build:
            context: .
            dockerfile: ./docker/db/Dockerfile
            args:
                # These values should be in sync with environment
                # for development. If you change them, you'll
                # need to rebuild the container
                - POSTGRES_DB=operator
                - POSTGRES_USER=postgres
                - POSTGRES_PASSWORD=somepassword
                - POSTGRES_PORT=5432
        ports:
            - "5432:5432"


    mongodb:
        image: mongo:latest
        restart: always
        env_file: environment.env
        environment:
            MONGO_INITDB_ROOT_USERNAME: mongo
            MONGO_INITDB_ROOT_PASSWORD: somepassword
            MONGODB_DB: operators
            MONGODB_USER: mongo
            MONGODB_PASSWORD: somepassword
        ports:
            - "27017:27017"
        volumes:
            - ./docker/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh


    server: &server
        env_file: environment.env
        image: operators_server
        build:
            context: .
            dockerfile: docker/app/Dockerfile
        ports:
            - "7001:8000"
        depends_on:
            - db
            - mongodb
            - rabbitmq
            - celery_worker
            - celery_beat


    # Rabbit message queue
    rabbitmq:
        image: rabbitmq:3.8-alpine

    # Celery Worker
    celery_worker:
        env_file: environment.env
        image: celery_terminal
        build:
            context: .
            dockerfile: docker/celery/worker/Dockerfile
        ports: []
        depends_on: 
            - rabbitmq
            - db
            - mongodb

    # Celery Beat
    celery_beat:
        env_file: environment.env
        image: celery_beat
        build:
            context: .
            dockerfile: docker/celery/beat/Dockerfile
        ports: []
        depends_on: 
            - rabbitmq
            - db
            - mongodb
            - celery_worker